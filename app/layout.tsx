
import './globals.css'
import type { Metadata } from 'next'
import { Open_Sans } from 'next/font/google'
import { ClerkProvider } from '@clerk/nextjs'

import { cn } from '@/lib/utils'
import { ThemeProvider } from '@/components/providers/theme-provider'
import { ModalProvider } from '@/components/providers/modal-provider'
import { SocketProvider } from '@/components/providers/socket-provider'
import { QueryProvider } from '@/components/providers/query-provider'
import Head from 'next/head'
import { useEffect } from 'react'


const font = Open_Sans({ subsets: ['latin'] })


export const metadata: Metadata = {
  title: 'Million Chat',
  description: 'Generated by create next app',
  manifest: '/manifest.json',
  icons: {apple:'/icon.png'},
  themeColor: '#fff'
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {

  useEffect(() => {
    function handleTouchStart(event: TouchEvent) {
      if (event.touches.length > 1) {
        event.preventDefault();
      }
    }

    function handleTouchMove(event: any) {
      if (event.scale !== 1) {
        event.preventDefault();
      }
    }

    document.addEventListener('touchstart', handleTouchStart, { passive: false });
    document.addEventListener('touchmove', handleTouchMove, { passive: false });

    // Cleanup the event listeners on component unmount
    return () => {
      document.removeEventListener('touchstart', handleTouchStart);
      document.removeEventListener('touchmove', handleTouchMove);
    };
  }, []);

  return (
    <ClerkProvider>
    <html lang="en" suppressHydrationWarning>
        <Head>
          <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" />
          <meta name="apple-mobile-web-app-capable" content="yes"/>
        </Head>
      <body className={cn (
        font.className, "bg-white dark:bg-[#313338]"
        )}>
        <ThemeProvider
         attribute='class'
         defaultTheme='dark'
         enableSystem={false}
         storageKey='million-theme'>
          <SocketProvider>
          <ModalProvider/>
          <QueryProvider>
                {children}
          </QueryProvider>
            </SocketProvider>
          </ThemeProvider>
        </body>
    </html>
    </ClerkProvider>
  )
}
